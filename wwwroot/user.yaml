swagger: "2.0"
info:
  description: "This is the API documentation for the Demo Web APi which uses a User Model."
  version: "1.0.0"
  title: "Swagger for Users DataBase"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    
basePath: "/v2"
tags:
- name: "users"
  description: "All CRUD Operations on Users DB"
schemes:
- "https"
- "http"
paths:
  /users:
    get:
      tags:
      - "users"
      summary: "Gets All Users in the DataBase"
      description: ""
      operationId: "getAllUsers"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        404:
          description: "No Resources Found"
    post:
      tags:
      - "users"
      summary: "Add a new User to the DB"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A New User is added to the DB from here"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
  /users/{userId}:
    get:
      tags:
      - "users"
      summary: "Get User with userId in the DataBase"
      description: ""
      operationId: "getUserById"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: ""
        required: true
        type: "string"
      responses:
        404:
          description: "No Resources Found"
    put:
      tags: 
      - "users"
      summary: "Update profile of the User in the DB"
      description: ""
      operationId: "updateDoctorById"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "An Existing User is updated in the DB from here"
        required: true
        type: "string"
      responses:
        400:
          description: "Doctor with given doctorRegNum not found"
    delete:
      tags:
      - "users"
      summary: "Delete a User profile with userId"
      operationId: "deleteDoctorById"
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        description: "An Existing User is deleted in the DB from here"
        required: true
        type: "string"
      responses:
        200:
          description: OK

definitions:

  User:
    type: "object"
    properties:
      userId:
        type: "string"
      userName:
        type: "string"
      userCity:
        type: "string"
      userEmail:
        type: "string"
      userPhone:
        type: "string"
    xml:
      name: "User"


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"